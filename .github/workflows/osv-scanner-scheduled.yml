name: OSV-Scanner with SBOM

on:
  schedule:
    - cron: "2 * * * *"
  push:
    branches: [master]

permissions:
  actions: read
  security-events: write
  contents: read

jobs:
  osv-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Setup Go environment (required for osv-scanner installation)
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    # Install OSV-Scanner (correct method)
    - name: Install OSV-Scanner
      run: |
        go install github.com/google/osv-scanner/v2/cmd/osv-scanner@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        osv-scanner --version

    # Install build tools and Syft
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install Python environment 
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install conan
      run: |
          pip install conan --upgrade
          conan profile detect --force
                        
    - name: Linux build
      run: |
          mkdir -p build && cd build
          conan install .. --output-folder=. --build=missing
          cmake .. -DBUILD_TESTING=TRUE -DBUILD_SHARED_LIBS=TRUE -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release --target install
          #cmake -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON .
          #cmake --build build    
    
    # Generate SBOM
    - name: Generate SBOM
      run: |
        syft scan dir:$GITHUB_WORKSPACE \
          --output cyclonedx-json=$GITHUB_WORKSPACE/sbom.cdx.json \
          --source-name "${{ github.repository }}" \
          --source-version "${{ github.sha }}"
          
    # Scan with explicit CycloneDX format
    - name: Run vulnerability scan
      run: |
           osv-scanner --format=json --output=$GITHUB_WORKSPACE/results.json $GITHUB_WORKSPACE/sbom.cdx.json

    # Upload results
    - name: Upload scan results
      uses: actions/upload-artifact@v4
      with:
        name: vulnerability-scan-results
        path: ${{ github.workspace }}/results.json
